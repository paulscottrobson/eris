Image Format
============

Image is built up of bands of multiple colour strips, each 16 pixels wide.
These are built of bands of one colour known as "pixel bands"
Each bands width is a multiple of 16.
It can handle alpha in images, < 96 is transparent. Colours will be mapped to RGB digital.
Output formats are .eim (Eris Image)

Image:
		1 Word : Type ID 	"I" << 8 | "0"
		1 Word : Overall height of image (pixels)
		1 Word : Overall width of image (pixels)
		1 Word : Number of horizontal bands overall (e.g. the width is this value x 16)

Band:
		1 Word : Type ID 	"B" << 8 | "0"
		1 Word : Number of pixel bands in this horizontal band (can be zero)

Pixel Band: 
		1 Word : Type ID 	"P" << 8 | "0"
		1 Word : Colour/Mask word for this pixel band.
		x Words : Compressed data.

Compressed Format
=================

The format is as follows :-

$0000 		End of compressed data.
$01nn 		Repeat the following word nn times
$02nn		Copy the following nn words verbatim

The image drawing routines, which should be capable of scaling x 2 and flipping are in the kernel.

The converter has support for transparency, and allows the scaling and centering of the converted image, 
it takes a class which returns size and pixels/transparency to represent its source object.

Image drawing is in the Kernel.
